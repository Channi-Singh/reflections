How did viewing a diff between two versions of a file help you see the bug that was introduced?
Diff shows only the changes at the particular line nuber between the two files.
It specifies the line number followed by the < symbol and the content.
Three dash lines seprate the changed content of the old version of the file to new version of the file.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Sometimes you want to check to see if any major changes to your file will help in getting the desired results but when you realize it did not; you don not want to edit the file back to its original; you can simply restore to the previuos version which will save you lot of time. This way you can keep trying to modify the raw file until you get the desired results.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Pros:
You are in charge of saving the file and save it when major addition/changes were made.
Less copies will be saved.
Copies are saved on local computer.
Commit copies can be accessed offline.
Copies can be edited by any editor.

Cons:
Chances of forgetting to save the file.


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
It is because all the multiple files in the commit are connected to each other somehow, so it is good idea to have them stored as snap shot in time at one location.

How can you use the commands git log and git diff to view the history of files?
git log command will provide you the history of different commit's that were saved for the same file.
git diff will provide the difference between the two commit files.
Command for git log is: git log --stat
Command for git diff is: git diff commitid1 commitid2

How might using version control make you more confident to make changes that could break something?
Beacuse you can always come back to the previous version to start fresh and make changes again. It gives you confidence to try new things whether it may break your code.


Now that you have your workspace set up, what do you want to try using Git for?
For comparing two versions of the same file.